name: Docker Workflow

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21' 
          cache: 'maven'
          
      - name: Run Dependency Check
        run: mvn dependency-check:check

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Enable Docker Content Trust
        run: export DOCKER_CONTENT_TRUST=1
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/java_app:1.0.${{ github.run_number }}
          build-args:
            "VERSION=1.0.${{github.run_number}}"

      - name: Static Testing
        run: |
          mvn clean install sonar:sonar \
          -Dsonar.projectKey=The-LittleTeapot_simple-java-maven-app \
          -Dsonar.organization=itayk \
          -Dsonar.host.url=https://sonarcloud.io/ \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install Snyk
        uses: snyk/actions/setup@master
      
      - name: Scan Docker Image wih Snyk
        run: snyk container test ${{ secrets.DOCKER_USERNAME }}/java_app:1.0.${{ github.run_number }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Sign and push docker image
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/java_app:1.0.${{ github.run_number }}
          # Example: 51f9a39f3db4ddaaf9174fca69f41fb01a04a4dfb5125ef115feecb93d19efa6
          private-key-id: "${{ secrets.NOTARY_PRIVATE_KEY_ID }}"
          # The contents from: ~/.docker/trust/private/51f9a39f3db4ddaaf9174fca69f41fb01a04a4dfb5125ef115feecb93d19efa6.key)
          private-key: ${{ secrets.NOTARY_PRIVATE_KEY }}
          # Example: myPassw0rdChangeMeReplaceMe
          private-key-passphrase: ${{ secrets.NOTARY_PASSPHRASE }}

      - name: Verify and deploy image
        run: |
          if docker trust inspect --pretty ${{ secrets.DOCKER_USERNAME }}/java_app:1.0.${{ github.run_number }} \
          | grep -q 'Signatures: \[\]'; then \
            echo "Image is not signed. Deployment aborted."
            exit 1
          else
            echo "Image is signed. Proceeding with deployment..."
            # Your deployment commands here
          fi

# comment8
        
